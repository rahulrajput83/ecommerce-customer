import AccountDetail from '@/components/AccountDetail';
import AccountEdit from '@/components/AccountEdit';
import AccountLoading from '@/components/AccountLoading';
import Navbar from '@/components/Navbar';
import { getToken } from '@/Functions/getToken';
import { Logout } from '@/Functions/Logout';
import { getRequest } from '@/Functions/Requests';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react'


const accountItem = ['My Account', 'My Orders', 'Logout']

function account() {
    const router = useRouter();
    const [cart, setCart] = useState([]);
    const [selectedItem, setSelectedItem] = useState('My Account');
    const [accountData, setAccountData] = useState();
    const [edit, setEdit] = useState({
        field: '',
        valueField: ''
    });

    const getAccount = async () => {
        try {
            const data = await getRequest('/api/account')
            setAccountData(data)
        } catch (error) {
            console.log(error)
        }
    }

    useEffect(() => {
        const localCart = JSON.parse(localStorage.getItem('cart')) || [];
        setCart(localCart)
        getAccount();
    }, [])

    useEffect(() => {
        if (!getToken()) {
            router.push(Logout());
        }
    }, [])

    const handleItem = title => {
        if (title === 'Logout') {
            router.push(Logout());
        }
        else {
            setSelectedItem(title)
        }
    }

    return (
        <>
            <Head>
                <title>Account</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="favicon.ico" />
            </Head>

            <main className='w-100 flex flex-col box-border'>
                <Navbar cart={cart} />
                <div className='w-full px-2 md:px-4 gap-4 pb-10 mt-20 flex flex-col md:flex-row'>
                    <div className='w-full md:w-1/4'>
                        <div className='w-full flex gap-4 flex-row md:flex-col'>
                            {accountItem.map((e, i) => {
                                return (
                                    <button onClick={() => handleItem(e)} key={`accountItem-${i}`} className={`p-3 rounded-md text-sm shadow-lg font-medium ${selectedItem === e ? 'text-white bg-red-500' : 'text-black'}`}>{e}</button>
                                )
                            })}
                        </div>
                    </div>
                    <div className='w-full gap-3 md:w-3/4 justify-start items-center flex flex-col'>
                        <span className='text-xl font-medium'>{selectedItem}</span>
                        {accountData  ?
                            <div className='w-full px-1 md:w-2/3 flex flex-col'>
                                <AccountDetail setEdit={setEdit} title='Name' value={accountData.name} valueField='name' className='border-2 rounded-tl-lg rounded-tr-lg' />
                                <AccountDetail setEdit={setEdit} title='E-mail' value={accountData.email} valueField='email' className='border-2 border-t-0' />
                                <AccountDetail setEdit={setEdit} title='Mobile Number' value={accountData.number} valueField='number' className='border-2 border-t-0' />
                                <AccountDetail setEdit={setEdit} title='Delivery Address' value={accountData.address} valueField='address' className='border-2 rounded-bl-lg border-t-0 rounded-br-lg'  />
                                {edit.field && <AccountEdit getAccount={getAccount} setEdit={setEdit} edit={edit} accountData={accountData} />}
                            </div>
                            : <AccountLoading />
                        }
                    </div>

                </div>
            </main>
        </>

    )
}

export default account;